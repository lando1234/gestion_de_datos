GO
CREATE PROCEDURE LOGIN_USUARIO
	@USERNAME NVARCHAR(255),
	@PASS NVARCHAR(255),
	@RESULT int OUTPUT
AS
BEGIN
	DECLARE @ID INT, @USER NVARCHAR(255),@PASSWORD NVARCHAR(255), @REINTENTOS INT, @HAB BIT

	SELECT
		@ID = USUARIO_ID,
		@USER = USERNAME,
		@PASSWORD = PASS,
		@REINTENTOS = LOGIN_FALLIDO,
		@HAB = BAJA_LOGICA
	FROM [NO_SRTA_E_GATOREI].USUARIOS
	WHERE USERNAME = @USERNAME

	IF @ID IS NULL
    BEGIN
		RETURN -1;
	END

ELSE IF @REINTENTOS >= 3
	BEGIN
		RETURN -2;
	END
	
ELSE IF @HAB = 1
	BEGIN
		RETURN -4;
	END

ELSE IF @PASSWORD <> @PASS
	BEGIN
		UPDATE [NO_SRTA_E_GATOREI].[USUARIOS]
	SET LOGIN_FALLIDO = LOGIN_FALLIDO + 1
	WHERE USUARIO_ID = @ID
		RETURN -3;
	END
ELSE 
	BEGIN
		UPDATE [NO_SRTA_E_GATOREI].[USUARIOS]
	SET LOGIN_FALLIDO = 0
	WHERE USUARIO_ID = @ID

		SELECT @RESULT = @ID
		RETURN 0;
	END
END
GO
CREATE PROCEDURE CREAR_USUARIO_CLIENTE
	@USERNAME NVARCHAR(255),
	@PASS NVARCHAR(244),
	@NOMBRE NVARCHAR(255),
	@APELLIDO NVARCHAR(255),
	@DNI NUMERIC(18, 0),
	@MAIL NVARCHAR(255),
	@TELEFONO NUMERIC(18,0),
	@DIRECCION NVARCHAR(255),
	@CP NUMERIC(4,0),
	@CIUDAD NVARCHAR(255),
	@FECHA_NACIMIENTO DATETIME,
	@FECHA_ACTUAL DATETIME
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @USER_ID INT, @ID_NUEVO INT
	INSERT INTO [NO_SRTA_E_GATOREI].[USUARIOS]
		(USERNAME,PASS,TIPO_USUARIO)
	VALUES
		(@USERNAME, @PASS, 'CLIENTE')

	SELECT @USER_ID= USUARIO_ID
	FROM [NO_SRTA_E_GATOREI].[USUARIOS]
	WHERE USERNAME = @USERNAME

	INSERT INTO [NO_SRTA_E_GATOREI].[DIRECCIONES]
		(DIRECCION,CIUDAD,CODIGO_POSTAL)
	VALUES
		(@DIRECCION, @CIUDAD, @CP)

	SELECT @ID_NUEVO = DIRECCION_ID
	FROM [NO_SRTA_E_GATOREI].[DIRECCIONES]
	WHERE DIRECCION = @DIRECCION
		AND CIUDAD = @CIUDAD
		AND CODIGO_POSTAL = @CP

	INSERT INTO [NO_SRTA_E_GATOREI].[CLIENTES]
		(DNI,NOMBRE,APELLIDO,MAIL,TELEFONO,FECHA_NACIMIENTO,USUARIO_ID,DIRECCION_ID)
	VALUES
		(@DNI, @NOMBRE, @APELLIDO, @MAIL, @TELEFONO, @FECHA_NACIMIENTO, @USER_ID, @ID_NUEVO)

	SELECT @ID_NUEVO = CLIENTE_ID
	FROM [NO_SRTA_E_GATOREI].[CLIENTES]
	WHERE DNI = @DNI

	INSERT INTO NO_SRTA_E_GATOREI.CREDITOS
		(FECHA,TIPO_PAGO_ID,MONTO,CLIENTE_ID)
	VALUES(@FECHA_ACTUAL, (SELECT TIPO_PAGO_ID
			FROM [NO_SRTA_E_GATOREI].[TIPOS_PAGOS]
			WHERE DESCRIPCION = 'REGALO'), 200, @ID_NUEVO)

	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
	END TRY
	BEGIN CATCH
		ROLLBACK TRANSACTION
		THROW;
	END CATCH
END	
GO
CREATE PROCEDURE CREAR_CLIENTE
	@NOMBRE NVARCHAR(255),
	@APELLIDO NVARCHAR(255),
	@DNI NUMERIC(18, 0),
	@MAIL NVARCHAR(255),
	@TELEFONO NUMERIC(18,0),
	@DIRECCION NVARCHAR(255),
	@CP NUMERIC(4,0),
	@CIUDAD NVARCHAR(255),
	@FECHA_NACIMIENTO DATETIME,
	@FECHA_ACTUAL DATETIME
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @ID_NUEVO INT
	
	INSERT INTO [NO_SRTA_E_GATOREI].[DIRECCIONES]
		(DIRECCION,CIUDAD,CODIGO_POSTAL)
	VALUES
		(@DIRECCION, @CIUDAD, @CP)

	SELECT @ID_NUEVO = DIRECCION_ID
	FROM [NO_SRTA_E_GATOREI].[DIRECCIONES]
	WHERE DIRECCION = @DIRECCION
		AND CIUDAD = @CIUDAD
		AND CODIGO_POSTAL = @CP

	INSERT INTO [NO_SRTA_E_GATOREI].[CLIENTES]
		(DNI,NOMBRE,APELLIDO,MAIL,TELEFONO,FECHA_NACIMIENTO,DIRECCION_ID)
	VALUES
		(@DNI, @NOMBRE, @APELLIDO, @MAIL, @TELEFONO, @FECHA_NACIMIENTO, @ID_NUEVO)

	SELECT @ID_NUEVO = CLIENTE_ID
	FROM [NO_SRTA_E_GATOREI].[CLIENTES]
	WHERE DNI = @DNI

	INSERT INTO NO_SRTA_E_GATOREI.CREDITOS
		(FECHA,TIPO_PAGO_ID,MONTO,CLIENTE_ID)
	VALUES(@FECHA_ACTUAL, (SELECT TIPO_PAGO_ID
			FROM [NO_SRTA_E_GATOREI].[TIPOS_PAGOS]
			WHERE DESCRIPCION = 'REGALO'), 200, @ID_NUEVO)

	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
	END TRY
	BEGIN CATCH 
	ROLLBACK TRANSACTION
			THROW;
	END CATCH
END	
GO
CREATE PROCEDURE CREAR_USUARIO_PROVEEDOR
	@USERNAME NVARCHAR(255),
	@PASS NVARCHAR(255),
	@RS NVARCHAR(255),
	@CUIT NVARCHAR(20),
	@MAIL NVARCHAR(255),
	@TELEFONO NUMERIC(18,0),
	@DIRECCION NVARCHAR(255),
	@CP NUMERIC(4,0),
	@CIUDAD NVARCHAR(255),
	@RUBRO_ID INT,
	@NOMBRE_CONTACTO NVARCHAR(255)
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @USER_ID INT, @ID_NUEVO INT
	INSERT INTO [NO_SRTA_E_GATOREI].[USUARIOS]
		(USERNAME,PASS,TIPO_USUARIO)
	VALUES
		(@USERNAME, @PASS, 'PROVEEDOR')

	SELECT @USER_ID= USUARIO_ID
	FROM [NO_SRTA_E_GATOREI].[USUARIOS]
	WHERE USERNAME = @USERNAME

	INSERT INTO [NO_SRTA_E_GATOREI].[DIRECCIONES]
		(DIRECCION,CIUDAD,CODIGO_POSTAL)
	VALUES
		(@DIRECCION, @CIUDAD, @CP)

	SELECT @ID_NUEVO = DIRECCION_ID
	FROM [NO_SRTA_E_GATOREI].[DIRECCIONES]
	WHERE DIRECCION = @DIRECCION
		AND CIUDAD = @CIUDAD
		AND CODIGO_POSTAL = @CP

	INSERT INTO [NO_SRTA_E_GATOREI].[PROVEEDORES]
		(CUIT,RAZON_SOCIAL,NOMBRE_CONTACTO,RUBRO_ID,MAIL,TELEFONO,USUARIO_ID,DIRECCION_ID)
	VALUES
		(@CUIT, @RS, @NOMBRE_CONTACTO, @RUBRO_ID, @MAIL, @TELEFONO, @USER_ID, @ID_NUEVO)

	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
	END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
			THROW;
	END CATCH
END	
GO
CREATE PROCEDURE CREAR_PROVEEDOR
	@RS NVARCHAR(255),
	@CUIT NVARCHAR(20),
	@MAIL NVARCHAR(255),
	@TELEFONO NUMERIC(18,0),
	@DIRECCION NVARCHAR(255),
	@CP NUMERIC(4,0),
	@CIUDAD NVARCHAR(255),
	@RUBRO_ID INT,
	@NOMBRE_CONTACTO NVARCHAR(255)
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @ID_NUEVO INT

	INSERT INTO [NO_SRTA_E_GATOREI].[DIRECCIONES]
		(DIRECCION,CIUDAD,CODIGO_POSTAL)
	VALUES
		(@DIRECCION, @CIUDAD, @CP)

	SELECT @ID_NUEVO = DIRECCION_ID
	FROM [NO_SRTA_E_GATOREI].[DIRECCIONES]
	WHERE DIRECCION = @DIRECCION
		AND CIUDAD = @CIUDAD
		AND CODIGO_POSTAL = @CP

	INSERT INTO [NO_SRTA_E_GATOREI].[PROVEEDORES]
		(CUIT,RAZON_SOCIAL,NOMBRE_CONTACTO,RUBRO_ID,MAIL,TELEFONO,DIRECCION_ID)
	VALUES
		(@CUIT, @RS, @NOMBRE_CONTACTO, @RUBRO_ID, @MAIL, @TELEFONO, @ID_NUEVO)

	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
		END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
			THROW;
	END CATCH
END	
GO
CREATE PROCEDURE CARGAR_CREDITO
	@FECHA DATETIME,
	@USUARIO_ID INT,
	@TIPO_PAGO_ID INT,
	@MONTO NUMERIC(18,2),
	@NOMBRE NVARCHAR(255),
	@FECHA_VENCIMIENTO NVARCHAR(5),
	@NUMERO NVARCHAR(100)
AS
BEGIN

	DECLARE @CLIENTE_ID INT; 
	
	SELECT @CLIENTE_ID = CLIENTE_ID 
	FROM [NO_SRTA_E_GATOREI].CLIENTES
	WHERE USUARIO_ID = @USUARIO_ID
	AND BAJA_LOGICA = 0;

	IF @CLIENTE_ID IS NULL
	BEGIN
	RETURN -1
	END

	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @TARJETA_ID INT

	INSERT INTO [NO_SRTA_E_GATOREI].[TARJETAS]
		(TITULAR,FECHA_VENCIMIENTO, NUMERO)
	VALUES
		(@NOMBRE, @FECHA_VENCIMIENTO, @NUMERO)

	SELECT @TARJETA_ID = TARJETA_ID
	FROM [NO_SRTA_E_GATOREI].[TARJETAS]
	WHERE NUMERO = @NUMERO

	INSERT INTO [NO_SRTA_E_GATOREI].[CREDITOS]
		(FECHA,TIPO_PAGO_ID,MONTO,CLIENTE_ID,TARJETA_ID)
	VALUES
		(@FECHA, @TIPO_PAGO_ID, @MONTO, @CLIENTE_ID, @TARJETA_ID)
	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
		END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
		THROW;
	END CATCH
END
GO
CREATE PROCEDURE FACTURAR_PROVEEDOR
	@PROVEEDOR_ID INT,
	@FECHA_DESDE DATETIME,
	@FECHA_HASTA DATETIME,
	@FECHA_FACTURACION DATETIME,
	@NUMERO BIGINT OUTPUT,
	@IMPORTE DECIMAL(10,2) OUTPUT
AS
BEGIN
	DECLARE @FACTURA_ID INT
	BEGIN TRANSACTION
	BEGIN TRY
	SELECT @NUMERO = MAX(NUMERO) + 1
	FROM FACTURA;

	INSERT INTO [NO_SRTA_E_GATOREI].[FACTURAS]
		(NUMERO,FECHA)
	VALUES
		(@NUMERO, @FECHA_FACTURACION)

	INSERT INTO FACTURAS_COMPRAS
		(FACTURA_ID,COMPRA_ID )
	SELECT SCOPE_IDENTITY(), C.COMPRA_ID
	FROM COMPRAS C, OFERTAS O
	WHERE C.OFERTA_ID = O.OFERTA_ID
		AND NOT EXISTS ( SELECT 1
		FROM FACTURAS_COMPRAS FC
		WHERE FC.COMPRA_ID = C.COMPRA_ID )
		AND C.FECHA_COMPRA BETWEEN @FECHA_DESDE AND @FECHA_HASTA

	SELECT @IMPORTE = IMPORTE
	FROM FACTURAS
	WHERE FACTURA_ID = @FACTURA_ID
	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
		END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
			THROW;
	END CATCH
END
GO
CREATE PROCEDURE INVERTIR_BAJA_LOGICA_CLIENTE
	@CLIENTE_ID INT
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @STATE BIT, @USER_ID BIT
	SELECT @STATE = ~BAJA_LOGICA, @USER_ID = USUARIO_ID
	FROM [NO_SRTA_E_GATOREI].CLIENTES
	WHERE CLIENTE_ID = @CLIENTE_ID

	UPDATE [NO_SRTA_E_GATOREI].CLIENTES 
	SET BAJA_LOGICA = @STATE 
	WHERE CLIENTE_ID = @CLIENTE_ID

	IF @USER_ID IS NOT NULL
	BEGIN
		UPDATE [NO_SRTA_E_GATOREI].USUARIOS
		SET BAJA_LOGICA = @STATE
		WHERE USUARIO_ID = @USER_ID
	END

	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
		END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
			THROW;
	END CATCH
END
GO
CREATE PROCEDURE INVERTIR_BAJA_LOGICA_PROVEEDOR
	@PROVEEDOR_ID INT
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @STATE BIT, @USER_ID BIT
	SELECT @STATE = ~BAJA_LOGICA, @USER_ID = USUARIO_ID
	FROM [NO_SRTA_E_GATOREI].PROVEEDORES
	WHERE PROVEEDOR_ID = @PROVEEDOR_ID

	UPDATE [NO_SRTA_E_GATOREI].PROVEEDORES 
	SET BAJA_LOGICA = @STATE 
	WHERE PROVEEDOR_ID = @PROVEEDOR_ID

	IF @USER_ID IS NOT NULL
	BEGIN
		UPDATE [NO_SRTA_E_GATOREI].USUARIOS
		SET BAJA_LOGICA = @STATE
		WHERE USUARIO_ID = @USER_ID
	END

	IF @@ERROR <> 0
		BEGIN
		ROLLBACK TRANSACTION
		RETURN @@ERROR
	END
		ELSE
		BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
		END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
			THROW;
	END CATCH
END
GO
CREATE FUNCTION STRING_SPLIT
(
    @string    nvarchar(max),
    @delimiter nvarchar(max)
)
RETURNS TABLE AS RETURN
(
    SELECT
	ROW_NUMBER ( ) over(order by (select 0))  id     --  Not sure if it works correct
         , Split.a.value('.', 'NVARCHAR(MAX)')       value
FROM
	(
        SELECT CAST('<X>'+REPLACE(@string, @delimiter, '</X><X>')+'</X>' AS XML) AS String
    ) AS a
    CROSS APPLY String.nodes('/X') AS Split(a)
)
GO
CREATE PROCEDURE ACTUALIZAR_ROL
	@ROL_ID INT,
	@ROL_DESC NVARCHAR(100),
	@PERMISOS NVARCHAR(255)
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	UPDATE [NO_SRTA_E_GATOREI].[ROLES] 
SET NOMBRE = @ROL_DESC
WHERE ROL_ID = @ROL_ID

	DELETE [NO_SRTA_E_GATOREI].[PERMISOS_ROLES]
WHERE ROL_ID = @ROL_ID

	INSERT INTO [NO_SRTA_E_GATOREI].[PERMISOS_ROLES]
		(PERMISO_ID,ROL_ID)
	SELECT VALUE, @ROL_ID
	FROM STRING_SPLIT(@PERMISOS,'|')

	IF @@ERROR <> 0 
BEGIN
		ROLLBACK
		RETURN @@ERROR
	END
ELSE 
BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
		END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
			THROW;
	END CATCH
END
GO
CREATE PROCEDURE CREAR_ROL
	@ROL_DESC NVARCHAR(100),
	@PERMISOS NVARCHAR(255)
AS
BEGIN
	BEGIN TRANSACTION
	BEGIN TRY
	DECLARE @ROL_ID INT;

	INSERT INTO [NO_SRTA_E_GATOREI].ROLES
		(NOMBRE)
	VALUES
		(@ROL_DESC);
	SELECT @ROL_ID
	FROM [NO_SRTA_E_GATOREI].ROLES
	WHERE NOMBRE = @ROL_DESC;

	INSERT INTO [NO_SRTA_E_GATOREI].[PERMISOS_ROLES]
		(PERMISO_ID,ROL_ID)
	SELECT VALUE, @ROL_ID
	FROM STRING_SPLIT(@PERMISOS,'|')

	IF @@ERROR <> 0 
BEGIN
		ROLLBACK
		RETURN @@ERROR
	END
ELSE 
BEGIN
		COMMIT TRANSACTION
		RETURN 0
	END
		END TRY
	BEGIN CATCH
	ROLLBACK TRANSACTION
		THROW;
			END CATCH
END
GO
CREATE PROCEDURE COMPRAR_OFERTA
	@CLIENTE_ID INT,
	@OFERTA_ID INT,
	@FECHA_COMPRA DATETIME,
	@CODIGO_CUPON INT OUTPUT
AS
BEGIN
	DECLARE @CREDITO DECIMAL(18,2),@PRECIO DECIMAL(18,2), @MAX INT,@CANT INT;

	SELECT @CREDITO = CREDITO
	FROM [NO_SRTA_E_GATOREI].CLIENTES
	WHERE CLIENTE_ID = @CLIENTE_ID;

	SELECT @PRECIO = PRECIO_OFERTA, @MAX = MAXIMO_USUARIO
	FROM [NO_SRTA_E_GATOREI].OFERTAS
	WHERE OFERTA_ID = @OFERTA_ID;

	SELECT @CANT = COUNT(*)
	FROM [NO_SRTA_E_GATOREI].COMPRAS
	WHERE OFERTA_ID = @OFERTA_ID
		AND CLIENTE_ID = @CLIENTE_ID
	GROUP BY OFERTA_ID,CLIENTE_ID;

	IF @MAX <= @CANT
BEGIN
		RETURN -1;
	END
ELSE IF @CREDITO < @PRECIO
BEGIN
		RETURN -2;
	END
ELSE 
BEGIN
		INSERT INTO [NO_SRTA_E_GATOREI].COMPRAS
			(CLIENTE_ID,OFERTA_ID,FECHA_COMPRA)
		VALUES
			(@CLIENTE_ID, @OFERTA_ID, @FECHA_COMPRA);

		SET @CODIGO_CUPON = SCOPE_IDENTITY();

		RETURN 0;
	END
END
GO
CREATE PROCEDURE CONSUMIR_CUPON
	@PROVEEDOR_ID INT,
	@FECHA_CONSUMO DATETIME,
	@CODIGO_CUPON INT
AS
BEGIN
	DECLARE @FECHA_VENCIMIENTO DATETIME, @PROVEEDOR INT, @FECHA_ENTREGA DATETIME;

	SELECT @FECHA_VENCIMIENTO = O.FECHA_VENCIMIENTO, @PROVEEDOR = O.PROVEEDOR_ID, @FECHA_ENTREGA = C.FECHA_CONSUMO
	FROM [NO_SRTA_E_GATOREI].OFERTAS O
		INNER JOIN [NO_SRTA_E_GATOREI].CUPONES C
		ON O.OFERTA_ID = C.OFERTA_ID
	WHERE C.CUPON_ID = @CODIGO_CUPON

	IF @PROVEEDOR_ID <> @PROVEEDOR
BEGIN
		RETURN -1
	END
ELSE IF @FECHA_VENCIMIENTO > @FECHA_CONSUMO
BEGIN
		UPDATE [NO_SRTA_E_GATOREI].CUPONES SET ESTADO = 'VENCIDO' WHERE CUPON_ID = @CODIGO_CUPON
	END
ELSE IF @FECHA_ENTREGA IS NOT NULL 
BEGIN
		RETURN -1
	END
ELSE 
BEGIN
		UPDATE [NO_SRTA_E_GATOREI].CUPONES SET FECHA_CONSUMO = @FECHA_CONSUMO, ESTADO='ENTREGADO' WHERE CUPON_ID = @CODIGO_CUPON
	END
END